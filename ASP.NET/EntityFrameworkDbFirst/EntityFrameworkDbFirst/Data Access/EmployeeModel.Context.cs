//------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated from a template.
//
//    Manual changes to this file may cause unexpected behavior in your application.
//    Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace EntityFrameworkDbFirst.Data_Access
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Objects;
    using System.Data.Objects.DataClasses;
    using System.Linq;
    
    public partial class ADODBEntities : DbContext
    {
        public ADODBEntities()
            : base("name=ADODBEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public DbSet<Emp> Emps { get; set; }
    
        public virtual ObjectResult<CRUDEmployeeOperations_Result> CRUDEmployeeOperations(Nullable<int> id, string name, string gender, Nullable<System.DateTime> dateOfJoining, Nullable<double> salary, string operation)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(int));
    
            var nameParameter = name != null ?
                new ObjectParameter("Name", name) :
                new ObjectParameter("Name", typeof(string));
    
            var genderParameter = gender != null ?
                new ObjectParameter("Gender", gender) :
                new ObjectParameter("Gender", typeof(string));
    
            var dateOfJoiningParameter = dateOfJoining.HasValue ?
                new ObjectParameter("DateOfJoining", dateOfJoining) :
                new ObjectParameter("DateOfJoining", typeof(System.DateTime));
    
            var salaryParameter = salary.HasValue ?
                new ObjectParameter("Salary", salary) :
                new ObjectParameter("Salary", typeof(double));
    
            var operationParameter = operation != null ?
                new ObjectParameter("Operation", operation) :
                new ObjectParameter("Operation", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<CRUDEmployeeOperations_Result>("CRUDEmployeeOperations", idParameter, nameParameter, genderParameter, dateOfJoiningParameter, salaryParameter, operationParameter);
        }
    }
}
